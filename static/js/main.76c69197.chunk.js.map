{"version":3,"sources":["components/CoinRow.js","components/TableCoins.js","App.js","reportWebVitals.js","index.js"],"names":["CoinRow","coin","index","console","log","src","image","alt","name","style","width","className","symbol","current_price","price_change_percentage_24h","total_volume","titles","TableCoins","coins","map","title","App","useState","setCoins","getData","a","axios","get","res","data","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAuBeA,EArBC,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAErB,OADAC,QAAQC,IAAIH,EAAMC,GAEd,+BACI,mCAAMA,KACN,+BACI,qBAAKG,IAAKJ,EAAKK,MAAOC,IAAKN,EAAKO,KAAMC,MAAO,CAAEC,MAAO,MAAQC,UAAU,mBACxE,qCAAQV,EAAKO,KAAb,OACA,sBAAMG,UAAU,iCAAhB,SAAkDV,EAAKW,YAG3D,6BAAKX,EAAKY,gBACV,oBAAIF,UAAWV,EAAKa,4BAA8B,EAAI,eAAkB,cAAxE,SACKb,EAAKa,8BAEV,+BAAKb,EAAKc,aAAV,SAZKd,EAAKO,OCFhBQ,EAAS,CAAC,IAAK,OAAQ,QAAS,eAAgB,cAuBvCC,EAtBI,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAElB,OACI,wBAAOP,UAAU,oCAAjB,UACI,gCACI,6BAEQK,EAAOG,KAAI,SAAAC,GAAK,OACZ,6BAAKA,WAKrB,gCACKF,EAAMC,KAAI,SAAClB,EAAMC,GAAP,OACR,cAAC,EAAD,CAASD,KAAMA,EAAMC,MAAOA,GAAYA,YCU5CmB,MAxBf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOJ,EAAP,KAAcK,EAAd,KAEMC,EAAO,uCAAG,4BAAAC,EAAA,sEACIC,IAAMC,IAAI,2GADd,OACRC,EADQ,OAEdzB,QAAQC,IAAIwB,EAAIC,MAChBN,EAASK,EAAIC,MAHC,2CAAH,qDAUb,OAJAC,qBAAU,WACRN,MACC,IAGD,qBAAKb,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,CAAYO,MAAOA,SCVZa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,YCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.76c69197.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst CoinRow = ({ coin, index }) => {\r\n    console.log(coin, index)\r\n    return (\r\n        <tr key={coin.name}>\r\n            <td> {index}</td>\r\n            <td>\r\n                <img src={coin.image} alt={coin.name} style={{ width: '3%' }} className=\"img-fluid me-4\" />\r\n                <span> {coin.name} </span>\r\n                <span className=\"ms-3 text-muted text-uppercase\">{coin.symbol}</span>\r\n\r\n            </td>\r\n            <td>{coin.current_price}</td>\r\n            <td className={coin.price_change_percentage_24h > 0 ? 'text-success' :  'text-danger'}>\r\n                {coin.price_change_percentage_24h}\r\n            </td>\r\n            <td>{coin.total_volume} </td>\r\n        </tr>\r\n    );\r\n\r\n}\r\n\r\nexport default CoinRow;","import React from 'react'\r\nimport CoinRow from './CoinRow'\r\n\r\nconst titles = ['#', 'Coin', 'Price', 'Price Change', '24h volume']\r\nconst TableCoins = ({ coins }) => {\r\n\r\n    return (\r\n        <table className='table table-dark mt-4 table-hover'>\r\n            <thead>\r\n                <tr>\r\n                    {\r\n                        titles.map(title=>(\r\n                            <td>{title}</td>\r\n                        ) )\r\n                    }\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {coins.map((coin, index) => (\r\n                   <CoinRow coin={coin} index={index} key={index}  />\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default TableCoins","import { useEffect, useState } from 'react';\nimport './App.css';\nimport axios from 'axios'\nimport TableCoins from './components/TableCoins';\n\nfunction App() {\n\n  const [coins, setCoins] = useState([])\n  \n  const getData = async () => {\n    const res = await axios.get(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=25&page=1\");\n    console.log(res.data);\n    setCoins(res.data)\n  }\n\n  useEffect(() => {\n    getData()\n  }, [])\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <TableCoins coins={coins} />\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}