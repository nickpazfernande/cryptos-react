{"version":3,"sources":["components/CoinRow.js","components/TableCoins.js","App.js","reportWebVitals.js","index.js"],"names":["CoinRow","coin","index","src","image","alt","name","style","width","className","symbol","current_price","price_change_percentage_24h","total_volume","titles","TableCoins","coins","search","filteredcoins","filter","toLowerCase","includes","map","title","App","useState","setCoins","setSerch","LastUpdate","setLastUpdate","getData","a","axios","get","res","data","last_updated","useEffect","type","placeholder","onChange","e","target","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6QA6BeA,EA3BC,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACvB,OACE,+BACE,mCAAMA,KACN,+BACE,qBACEC,IAAKF,EAAKG,MACVC,IAAKJ,EAAKK,KACVC,MAAO,CAAEC,MAAO,MAChBC,UAAU,mBAEZ,qCAAQR,EAAKK,KAAb,OACA,sBAAMG,UAAU,iCAAhB,SAAkDR,EAAKS,YAEzD,6BAAKT,EAAKU,gBACV,oBACEF,UACER,EAAKW,4BAA8B,EAAI,eAAiB,cAF5D,SAKGX,EAAKW,8BAER,+BAAKX,EAAKY,aAAV,SApBOZ,EAAKK,OCDZQ,EAAS,CAAC,IAAK,OAAQ,eAAgB,mBAAoB,cA0BlDC,EAzBI,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OACrBC,EAAgBF,EAAMG,QAC1B,SAAClB,GAAD,OACEA,EAAKK,KAAKc,cAAcC,SAASJ,EAAOG,eACxCnB,EAAKS,OAAOU,cAAcC,SAASJ,EAAOG,kBAG9C,OACE,wBAAOX,UAAU,oCAAjB,UACE,gCACE,6BACGK,EAAOQ,KAAI,SAACC,EAAOrB,GAAR,OACV,6BAAiBqB,GAARrB,UAIf,gCACGgB,EAAcI,KAAI,SAACrB,EAAMC,GAAP,OACjB,cAAC,EAAD,CAASD,KAAMA,EAAMC,MAAOA,GAAYA,YCoBnCsB,MApCf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOT,EAAP,KAAcU,EAAd,KACA,EAA2BD,mBAAS,IAApC,mBAAOR,EAAP,KAAeU,EAAf,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAAO,uCAAG,4BAAAC,EAAA,sEACIC,IAAMC,IACtB,2GAFY,OACRC,EADQ,OAIdR,EAASQ,EAAIC,MACbN,EAAcK,EAAIC,KAAK,GAAGC,cALZ,2CAAH,qDAYb,OAJAC,qBAAU,WACRP,MACC,IAGD,qBAAKrB,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,uBACE6B,KAAK,OACLC,YAAY,mBACZ9B,UAAU,4DACV+B,SAAU,SAACC,GAAD,OAAOd,EAASc,EAAEC,OAAOC,UAErC,sBAAKlC,UAAU,aAAf,+CACkCmB,EADlC,2CAIA,cAAC,EAAD,CAAYZ,MAAOA,EAAOC,OAAQA,UCxB3B2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,sBCEdQ,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5ebb7580.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst CoinRow = ({ coin, index }) => {\r\n  return (\r\n    <tr key={coin.name}>\r\n      <td> {index}</td>\r\n      <td>\r\n        <img\r\n          src={coin.image}\r\n          alt={coin.name}\r\n          style={{ width: \"3%\" }}\r\n          className=\"img-fluid me-4\"\r\n        />\r\n        <span> {coin.name} </span>\r\n        <span className=\"ms-3 text-muted text-uppercase\">{coin.symbol}</span>\r\n      </td>\r\n      <td>{coin.current_price}</td>\r\n      <td\r\n        className={\r\n          coin.price_change_percentage_24h > 0 ? \"text-success\" : \"text-danger\"\r\n        }\r\n      >\r\n        {coin.price_change_percentage_24h}\r\n      </td>\r\n      <td>{coin.total_volume} </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default CoinRow;\r\n","import React from \"react\";\r\nimport CoinRow from \"./CoinRow\";\r\n\r\nconst titles = [\"#\", \"Coin\", \"Precio (USD)\", \"Cambio de precio\", \"24h volume\"];\r\nconst TableCoins = ({ coins, search }) => {\r\n  const filteredcoins = coins.filter(\r\n    (coin) =>\r\n      coin.name.toLowerCase().includes(search.toLowerCase()) |\r\n      coin.symbol.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <table className=\"table table-dark mt-4 table-hover\">\r\n      <thead>\r\n        <tr>\r\n          {titles.map((title, index) => (\r\n            <td key={index}>{title}</td>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {filteredcoins.map((coin, index) => (\r\n          <CoinRow coin={coin} index={index} key={index} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default TableCoins;\r\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport TableCoins from \"./components/TableCoins\";\nimport NavBar from \"./components/NavBar\";\n\nfunction App() {\n  const [coins, setCoins] = useState([]);\n  const [search, setSerch] = useState(\"\");\n  const [LastUpdate, setLastUpdate] = useState([]);\n\n  const getData = async () => {\n    const res = await axios.get(\n      \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=25&page=1\"\n    );\n    setCoins(res.data);\n    setLastUpdate(res.data[1].last_updated);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <input\n          type=\"text\"\n          placeholder=\"Buscar moneda...\"\n          className=\"form-control bg-dark text-light border-0 mt-4 text-center\"\n          onChange={(e) => setSerch(e.target.value)}\n        />\n        <div className=\"text-muted\">\n          Ultima fecha de actualizaci√≥n: {LastUpdate} * Como referencia la\n          moneda Bitcoin*\n        </div>\n        <TableCoins coins={coins} search={search} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}